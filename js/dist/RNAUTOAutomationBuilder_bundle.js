rndefine("#RNAUTOAutomationBuilder",["lit/decorators","#RNAUTOCoreUI/LitModel","lit","#RNAUTOCore/LitElementBase","lit/directives/repeat.js","#RNAUTOCommonLibs/ActionFactory","#RNAUTOCommonLibs/LicenseRequired","#RNAUTOCore/EventManager","#RNAUTODialog/Dialog","#RNAUTOCoreUI/ModelBase","#RNAUTOCore/StoreBase","#RNAUTOCommonLibs/ConditionBase.Options","#RNAUTOCommonLibs/ConditionBuilder.Model","#RNAUTOCommonLibs/ConditionGroup.Options","#RNAUTOCommonLibs/ActionDictionary","#RNAUTOCommonLibs/NoneAction","#RNAUTOCommonLibs/ActionBase.Options","#RNAUTOCoreUI/ToastService","#RNAUTOCore/WpAjaxPost","#RNAUTOCommonLibs/DataSource","#RNAUTODialog/DialogBase","#RNAUTOLit/Lit","#RNAUTOCommonLibs/CheckboxProperty.Model","#RNAUTOCommonLibs/EmailProperty.Model"],(function(e,t,i,s,r,n,o,a,l,d,c,u,p,h,m,g,b,f,y,v,O,w,x,T){"use strict";e.customElement("rnawf-status")(class extends s.LitElementBase{constructor(...e){super(...e),this.IsBusy=!1}render(){return i.html` <div id="aw_save_box" class="postbox" style="margin:0"> <div class="inside" style="padding: 0"> <div class="submitbox" id="submitpost"> <table style="width: 100%"> <tbody> <tr> <td style="padding: 10px"> <div style="display: flex;align-items: center;"> <label style="font-weight: bold">Form:</label> <div style="width: 100%;margin-left: 3px;"> <select style="width: 100%" .value="${this.model.Options.FormId}" @change="${e=>{this.model.SetForm(e.target.value)}}"> <option value="" ?selected="${""==this.model.Options.FormId}">Select a form</option> ${rnBuilderVar.FormList.map((e=>i.html`<option value="${e.Id}" ?selected="${this.model.Options.FormId==e.Id}">${e.Name}</option>`))} </select> </div> </div> </td> </tr> <tr> <td style="padding: 10px;border-top: 1px solid #f2f2f2;"> <div style="display: flex;align-items: center;"> <label style="font-weight: bold">Status:</label> <div style="width: 100%;margin-left: 3px;"> <select style="width: 100%" .value="${this.model.Options.Status}" @change="${e=>{this.model.Options.Status=e.target.value,this.forceUpdate()}}"> <option value="active" ?selected="${"active"==this.model.Options.Status}">Active</option> <option value="disabled" ?selected="${"disabled"==this.model.Options.Status}">Disabled</option> </select> </div> </div> </td> </tr> </tbody> </table> <div id="major-publishing-actions"> <div id="delete-action"> </div> <div id="publishing-action"> <rn-spinner-button .isBusy="${this.IsBusy}" @click="${()=>this.Save()}" .label="Save"></rn-spinner-button> </div> <div class="clear"></div> </div> </div> </div> </div> `}async Save(){this.IsBusy=!0,this.forceUpdate(),await this.model.Save(),this.IsBusy=!1,this.forceUpdate()}}),e.customElement("rnawf-title-section")(class extends s.LitElementBase{render(){return i.html` <div id="post-body-content"> <div id="titlediv"> <div id="titlewrap"> <input type="text" name="post_title" size="30" value="" id="title" spellcheck="true" placeholder="Add title" .value="${this.model.Options.Name}" @change="${e=>{this.model.Options.Name=e.target.value,this.forceUpdate()}}" autocomplete="off"> </div> <div class="inside"> </div> </div> `}});var A={},C={};!function(e){Object.defineProperty(e,"__esModule",{value:!0});var t="xmark",i=[128473,10005,10006,10060,215,"close","multiply","remove","times"],s="f00d",r="M310.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L160 210.7 54.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L114.7 256 9.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 301.3 265.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L205.3 256 310.6 150.6z";e.definition={prefix:"fas",iconName:t,icon:[320,512,i,s,r]},e.faXmark=e.definition,e.prefix="fas",e.iconName=t,e.width=320,e.height=512,e.ligatures=i,e.unicode=s,e.svgPathData=r,e.aliases=i}(C),function(e){Object.defineProperty(e,"__esModule",{value:!0});var t=C;e.definition={prefix:t.prefix,iconName:t.iconName,icon:[t.width,t.height,t.aliases,t.unicode,t.svgPathData]},e.faTimes=e.definition,e.prefix=t.prefix,e.iconName=t.iconName,e.width=t.width,e.height=t.height,e.ligatures=t.aliases,e.unicode=t.unicode,e.svgPathData=t.svgPathData,e.aliases=t.aliases}(A),e.customElement("rnawf-action-section")(class extends s.LitElementBase{render(){return i.html` <div> <div id="aw_trigger_box" class="postbox no-drag" style=""> <div class="postbox-header" style="padding: 10px;font-weight: bold;"> <h2 style="padding: 0;margin: 0;">Action</h2> <div> <rn-fontawesome class="removeButton" @click="${()=>this.action.Remove()}" .icon="${A.faTimes}" style="font-size: 20px"></rn-fontawesome> </div> </div> <div class="inside" style="padding: 0;margin: 0"> ${this.GetContent()} </div> </div> </div> `}connectedCallback(){super.connectedCallback(),a.EventManager.Subscribe("RefreshFieldProperties",(()=>this.forceUpdate()),this)}disconnectedCallback(){super.disconnectedCallback(),a.EventManager.UnsubscribeEvent("RefreshFieldProperties",this)}ActionChanged(e){if("send_email"!=e&&!o.LicenseRequired.IsValid())return void this.forceUpdate();let t=this.action;this.action=n.ActionFactory.GetModel(n.ActionFactory.GetAction(e),this.automationBuilder),this.action.InitializeOptionsForFirstTime();let i=this.automationBuilder.Actions.indexOf(t);this.automationBuilder.Actions.splice(i,1,this.action),this.forceUpdate()}GetContent(){return null==this.automationBuilder.SelectedForm?i.html`<div style="padding: 10px">Please select a form</div>`:r.repeat([this.automationBuilder.SelectedForm.Id],(e=>e),(e=>i.html` <table class="rnawf-table"> <tbody> <tr> <td class=""> <label>Action <span class="required">*</span></label> </td> <td> <rn-inputs-select @change="${e=>this.ActionChanged(e.detail)}" .value="${this.action.Options.Type}" .options="${this.automationBuilder.Trigger.CurrentTrigger.GetActions()}"></rn-inputs-select> </td> </tr> ${this.action.GetSettings().map((e=>i.html`<tr> <td style="vertical-align: top"> <label>${e.Label}</label> </td> <td> ${e.Item.Render()} </td> </tr>`))} </tbody> </table> `))}});var S,M,L,B={};!function(e){Object.defineProperty(e,"__esModule",{value:!0});var t="plus",i=[10133,61543,"add"],s="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z";e.definition={prefix:"fas",iconName:t,icon:[448,512,i,"2b",s]},e.faPlus=e.definition,e.prefix="fas",e.iconName=t,e.width=448,e.height=512,e.ligatures=i,e.unicode="2b",e.svgPathData=s,e.aliases=i}(B),e.customElement("rn-automation-builder")(class extends t.LitModel{render(){return i.html` <div id="poststuff" class="rednao"> <div id="post-body" class="metabox-holder columns-2"> <rnawf-title-section .model="${this.model}"></rnawf-title-section> <div id="postbox-container-1" class="postbox-container"> <div id="side-sortables" class="meta-box-sortables ui-sortable"> <div id="pageparentdiv" class="postbox hide-if-js" style=""> <div class="postbox-header"><h2 class="hndle ui-sortable-handle">Post Attributes</h2> <div class="handle-actions hide-if-no-js"> </div> </div> <div class="inside"> <p class="post-attributes-label-wrapper menu-order-label-wrapper"><label class="post-attributes-label" for="menu_order">Order</label></p> <input name="menu_order" type="text" size="4" id="menu_order" value="0"> </div> </div> <rnawf-status .model="${this.model}"></rnawf-status> <div style="margin:1px;display: none"> <a href="#" @click="${e=>{e.preventDefault(),l.Dialog.Show(i.html`<rnaut-advance-setting-dialog .model="${this.model}"></rnaut-advance-setting-dialog>`)}}">Advance Options</a> </div> </div> </div> <div id="postbox-container-2" class="postbox-container"> <div id="normal-sortables" class="meta-box-sortables ui-sortable"> ${this.model.Trigger.render()} ${r.repeat(this.model.Actions,(e=>e.Options.Id),(e=>i.html`<rnawf-action-section .action="${e}" .automationBuilder="${this.model}"></rnawf-action-section>`))} <button @click="${()=>this.model.AddAction()}" class="rnbtn rnbtn-primary"><rn-fontawesome .icon=${B.faPlus}></rn-fontawesome> Add Action</button> </div> </div> </div><!-- /post-body --> <br class="clear"> </div>`}}),e.customElement("rnawf-trigger-section")(class extends t.LitModel{render(){return i.html` <div> <div id="aw_trigger_box" class="postbox no-drag" style=""> <div class="postbox-header"><h2 class="hndle ui-sortable-handle">Trigger</div> <div class="inside" style="padding: 0;margin: 0"> <table class="rnawf-table"> <tbody> <tr> <td class=""> <label>Trigger <span class="required">*</span></label> </td> <td> <rn-inputs-select @change="${e=>this.model.TriggerChanged(e.detail)}" .value="${this.model.CurrentTrigger.Options.Type}" .options="${[{Value:"form_submitted",Label:"Form submitted"},{Value:"entry_updated",Label:"Entry updated"},{Value:"entry_deleted",Label:"Entry deleted"},{Value:"before_submit",Label:o.LicenseRequired.AddFullVersionText("Before submit")},{Value:"before_update",Label:o.LicenseRequired.AddFullVersionText("Before update")},{Value:"before_delete",Label:o.LicenseRequired.AddFullVersionText("Before delete")},{Value:"none",Label:"None, I will execute this action manually"}]}"></rn-inputs-select> <div class="hintSection"> ${this.model.CurrentTrigger.GetHint()} </div> </td> </tr> </tbody> </table> </div> </div> ${this.model.CurrentTrigger.GetConditionSection()} </div> `}});let R=(S=c.StoreDataType(u.ConditionBaseOptions),M=class extends c.StoreBase{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Condition",L,this)}LoadDefaultValues(){this.Condition=(new u.ConditionBaseOptions).Merge(),this.Type=""}},L=babelHelpers.applyDecoratedDescriptor(M.prototype,"Condition",[S],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),M);var D,$,P,_,E;e.customElement("rnawf-condition-section")(class extends t.LitModel{render(){return i.html` <div id="aw_trigger_box" class="postbox no-drag" style=""> <div class="postbox-header"><h2 class="hndle ui-sortable-handle">Condition</div> <div class="inside" style="padding: 10px"> ${this.GetContent()} </div> </div> `}GetContent(){return null==this.model.AutomationModel.SelectedForm?"Please select a form first":0==this.model.Options.Condition.ConditionGroups.length?i.html` <div style="display: flex;flex-direction: column;align-items: center;"> You haven't created any condition yet which means the trigger will always be executed without restrictions <button @click=${()=>{this.model.ConditionBuilder.CreateGroup(),this.forceUpdate()}} class='rnbtn rnbtn-primary' style="margin-top: 5px;display: inline-flex;align-items: center;"> <rn-fontawesome .icon=${B.faPlus} style="margin-right: 3px"></rn-fontawesome> Click here to add your first filter </button> </div> `:this.model.ConditionBuilder.render()}});class N extends d.ModelBase{constructor(e,t){super(e),this.AutomationModel=t,this.ConditionBuilder=new p.ConditionBuilderModel(this.Options.Condition,this.AutomationModel)}GetConditionSection(){return i.html`<rnawf-condition-section .model="${this}"></rnawf-condition-section>`}CreateGroup(){let e=(new h.ConditionGroupOptions).Merge({ConditionLines:[{}]});this.Options.Condition.ConditionGroups.push(e),this.Refresh()}GetActions(){return m.GetActionsByTrigger(this.Options.Type).map((e=>({Value:e.Type,Label:e.Title})))}}class G extends N{render(){}GetHint(){switch(this.Options.Type){case"before_submit":return i.html`This trigger is executed before a form is submitted`;case"form_submitted":return i.html`This trigger is executed after a form is submitted`;case"entry_updated":return i.html`This trigger is executed after a form entry is updated`;case"entry_deleted":return i.html`This trigger is executed after a form entry is deleted`;case"before_update":return i.html`This trigger is executed before a form entry is updated`;case"before_delete":return i.html`This trigger is executed before a form entry is deleted`}return null}}class U extends d.ModelBase{constructor(e,t){super(e),this.AutomationBuilder=t,this.CurrentTrigger=this.GenerateTrigger(e.Trigger)}render(){return i.html`<rnawf-trigger-section .model="${this}"></rnawf-trigger-section>`}TriggerChanged(e){!["before_submit","before_update","before_delete"].includes(e)||o.LicenseRequired.IsValid()?(this.CurrentTrigger=this.GenerateTrigger((new R).Merge({Type:e})),this.AutomationBuilder.Actions=[new g.NoneAction((new b.ActionBaseOptions).Merge(),this.AutomationBuilder)],this.AutomationBuilder.Refresh()):this.AutomationBuilder.Refresh()}GenerateTrigger(e){switch(e.Type){case"form_submitted":case"entry_updated":case"entry_deleted":case"before_submit":case"before_update":case"before_delete":case"none":return new G((new R).Merge(e),this.AutomationBuilder)}}GetOptions(){return this.CurrentTrigger.Options.ToObject()}}let I=(D=d.ModelSerialize(),$=d.ModelSerialize(),P=class extends d.ModelBase{constructor(e){super(e),babelHelpers.initializerDefineProperty(this,"Trigger",_,this),babelHelpers.initializerDefineProperty(this,"Actions",E,this),null==this.Options.LinkOptions.ConfirmationMessage&&(this.Options.LinkOptions.ConfirmationMessage={type:"doc",content:[{type:"paragraph",attrs:{align:null},content:[{type:"text",text:"Are you sure you want to execute this action?"}]}]}),null==this.Options.LinkOptions.SuccessMessage&&(this.Options.LinkOptions.SuccessMessage={type:"doc",content:[{type:"paragraph",attrs:{align:null},content:[{type:"text",text:"Action executed successfully"}]}]}),null==this.Options.LinkOptions.ErrorMessage&&(this.Options.LinkOptions.ErrorMessage={type:"doc",content:[{type:"paragraph",attrs:{align:null},content:[{type:"text",text:"There was an error executing the action, please try again later"}]}]}),this.Trigger=new U(e,this),this.DataSource=new v.DataSource(this);for(let t of e.Actions)this.Actions.push(n.ActionFactory.GetModel(t,this))}render(){return i.html`<rn-automation-builder .model="${this}"></rn-automation-builder>`}SetForm(e){this.Options.FormId=e,this.Refresh()}get SelectedForm(){return this.DataSource.GetForm()}GetOptions(){let e=super.GetOptions();return e.Actions=e.Actions.filter((e=>""!=e.Type)),e}async Save(){if(""==this.Trigger.CurrentTrigger.Options.Type)return void f.ToastService.SendErrorMessage("Please select a trigger");if(null==this.DataSource.GetForm())return void f.ToastService.SendErrorMessage("Please select a form");if(0==this.Actions.filter((e=>""!=e.Options.Type)).length)return void f.ToastService.SendErrorMessage("Please add at least one action");if(""==this.Options.Name.trim())return void f.ToastService.SendErrorMessage("Title is mandatory");let e=await y.WpAjaxPost.Post("save",{Options:this.GetOptions()});null!=e&&(this.Options.Id=e.Id,window.history.replaceState({},document.title,rnBuilderVar.BuilderURL+"&id="+e.Id),f.ToastService.SendSuccess("Automation saved successfully"))}AddAction(){this.Actions.push(new g.NoneAction((new b.ActionBaseOptions).Merge(),this)),this.Refresh()}},_=babelHelpers.applyDecoratedDescriptor(P.prototype,"Trigger",[D],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),E=babelHelpers.applyDecoratedDescriptor(P.prototype,"Actions",[$],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),P);var k,F,V,z,H,q,j,W,X,Y,J,K,Q;k=c.StoreDataType(Object),F=class extends c.StoreBase{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Ref",V,this)}LoadDefaultValues(){this.ImageType="none",this.Ref=null}},V=babelHelpers.applyDecoratedDescriptor(F.prototype,"Ref",[k],{configurable:!0,enumerable:!0,writable:!0,initializer:null});let Z=(z=c.StoreDataType(Object),H=c.StoreDataType(Object),q=c.StoreDataType(Object),j=class extends c.StoreBase{constructor(...e){super(...e),this.RequireConfirmation=!1,this.IncludeOnEntriesScreen=!1,babelHelpers.initializerDefineProperty(this,"ConfirmationMessage",W,this),babelHelpers.initializerDefineProperty(this,"SuccessMessage",X,this),babelHelpers.initializerDefineProperty(this,"ErrorMessage",Y,this)}LoadDefaultValues(){this.RequireConfirmation=!1,this.ConfirmationMessage=null,this.SuccessMessage=null,this.ErrorMessage=null,this.IncludeOnEntriesScreen=!1}},W=babelHelpers.applyDecoratedDescriptor(j.prototype,"ConfirmationMessage",[z],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),X=babelHelpers.applyDecoratedDescriptor(j.prototype,"SuccessMessage",[H],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),Y=babelHelpers.applyDecoratedDescriptor(j.prototype,"ErrorMessage",[q],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),j),ee=(J=c.StoreDataType(R),K=class extends c.StoreBase{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Trigger",Q,this)}LoadDefaultValues(){this.Id=0,this.Name="",this.FormId="",this.Status="disabled",this.Trigger=(new R).Merge(),this.Actions=[],this.LinkOptions=(new Z).Merge()}GetValueFromLoader(e,t){switch(e){case"Actions":return n.ActionFactory.GetActionArray(t);case"Trigger":return class{static GetTrigger(e){switch(e.Type){case"form_submitted":case"entry_updated":case"entry_deleted":case"before_submit":case"before_update":case"before_delete":case"none":return(new R).Merge(e);default:throw new Error("Unknown trigger "+e.Type)}}}.GetTrigger(t)}}},Q=babelHelpers.applyDecoratedDescriptor(K.prototype,"Trigger",[J],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),K);e.customElement("rnaut-advance-setting-dialog")(class extends O.DialogBase{InternalGetOptions(){return{Title:"Advance Settings",Styles:{width:"900px",maxWidth:"80%"}}}SubRender(){return null==this.SuccessMessageProperty&&(this.IncludeOnEntries=new x.CheckboxPropertyModel(null,"IncludeOnEntriesScreen","Executable from entries screen").SetOnGetValue((()=>this.model.Options.LinkOptions.IncludeOnEntriesScreen)).SetOnChange((e=>{this.model.Options.LinkOptions.IncludeOnEntriesScreen=e,this.forceUpdate()})),this.SuccessMessageProperty=new T.EmailPropertyModel(null,"SuccessMessage","Success Message").SetOptionsOverwrite(this.model.Options.LinkOptions),this.ErrorMessageProperty=new T.EmailPropertyModel(null,"ErrorMessage","Error Message").SetOptionsOverwrite(this.model.Options.LinkOptions),this.ConfirmationMessageProperty=new T.EmailPropertyModel(null,"ConfirmationMessage","Confirmation Message").SetOptionsOverwrite(this.model.Options.LinkOptions),this.RequiredProperty=new x.CheckboxPropertyModel(null,"RequireConfirmation","Require Confirmation").SetOnGetValue((()=>this.model.Options.LinkOptions.RequireConfirmation)).SetOnChange((e=>{this.model.Options.LinkOptions.RequireConfirmation=e,this.forceUpdate()}))),i.html` <h2 style="margin:0">Link Options</h2> <hr style="margin:0;margin-bottom: 5px"/> <p style="font-style: italic">These options are used when you executed the automation via a link, for automations that are executed automatically these options are not used</p> ${this.IncludeOnEntries.Render()} ${this.SuccessMessageProperty.Render()} ${this.ErrorMessageProperty.Render()} ${this.RequiredProperty.Render()} ${w.rnIf(this.model.Options.LinkOptions.RequireConfirmation&&this.ConfirmationMessageProperty.Render())} `}}),y.WpAjaxPost.SetGlobalVar(rnBuilderVar);let te=new I((new ee).Merge(rnBuilderVar.Options));window.rnAutomationBuilder=te,i.render(te.render(),document.getElementById("app"))}));
